{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 # my snippets\
\
snippet email\
	mailR::send.mail(from = "jbirdjojo@gmail.com",\
	to = c("$\{2:\}"),\
	subject = "$\{3:Sent Directiy From Rstudio\}",\
	body = "$\{4:Dear \},",\
	attach.files = $\{5:NULL\},\
	smtp = list(host.name = "smtp.gmail.com", port = 465,\
	user.name = "jbirdjojo", passwd = Sys.getenv("jbirdjojo_password"), ssl = TRUE),\
	authenticate = TRUE, send = TRUE)\
\
snippet remove_all_items_in_env\
	rm(list = ls())\
	\
snippet sideprojectpath\
	"/Users/josephdespres/Documents/Side_R_Projects\
	\
snippet sideprojectpath\
	setwd("/Users/josephdespres/Documents/Side_R_Projects")\
	\
snippet stt802path\
	"/Users/josephdespres/Documents/MSU/STT-802_Statistical_Computation"\
\
snippet stt802path_set\
	setwd("/Users/josephdespres/Documents/MSU/STT-802_Statistical_Computation")\
	\
snippet file_folder\
	dirname(rstudioapi::getSourceEditorContext()$path)\
\
snippet read_csv\
	$\{1:name\} <- readr::read_csv("#$\{2:\}")\
\
snippet forloop\
	for(i in seq_along($\{1:vector\}))\{\
	$\{2:actions_in_loop\}\
	\}\
\
snippet myggplot\
	ggplot(data = $\{1:.\}, aes(x = $\{2:X\}, y = $\{3:Y\})) + \
	geom_$\{4:geomtry\}() +\
	labs(x = "$\{2:X\}", y = "$\{3:Y\}")\
\
snippet mylm\
	lm($\{1:dependant_var\} ~ $\{2:explainatory_vars\}, data = $\{3:df\})\
	\
snippet myperformance\
	start1 <- Sys.time()\
	$\{1:function1\}\
	finish1 <- Sys.time()\
	\
	start2 <- Sys.time()\
	$\{2:function2\}\
	finish2 <- Sys.time()\
	\
	function1 <- as.numeric(paste(finish1 - start1))\
	function2 <- as.numeric(paste(finish2 - start2))\
	\
	if(function1 < function2)\{\
	  print("First is Faster!")\
	  paste("$\{1:function1\}")\
	\} else\{\
	  print("Second is Faster!")\
	  paste("$\{2:function2\}")\
	\}\
	\
\
snippet mysnippets\
		usethis::edit_rstudio_snippets()\
\
# defaults -----------------------------\
\
snippet #!\
	#!/usr/bin/env Rscript\
\
# includes\
snippet library\
	library($\{1:tidyverse\})\
#snippet req\
#	require($\{1:package\})\
snippet source\
	source('$\{1:file\}')\
\
# conditionals\
snippet if\
	if ($\{1:condition\}) \{\
		$\{2:code\}\
	\}\
snippet el\
	else \{\
		$\{1:code\}\
	\}\
snippet ei\
	else if ($\{1:condition\}) \{\
		$\{2:code\}\
	\}\
\
# functions\
snippet fun\
	$\{1:name\} <- function ($\{2:\}) \{\
		$\{3:code\}\
	\}\
#snippet ret\
#	return($\{1:code\})\
\
# dataframes, lists, etc\
#snippet df\
#	$\{1:name\}[$\{2:rows\}, $\{3:cols\}]\
#snippet c\
#	c($\{1:items\})\
#snippet li\
#	list($\{1:items\})\
snippet mat\
	matrix($\{1:data\}, nrow=$\{2:rows\}, ncol=$\{3:cols\})\
\
# apply functions\
#snippet apply\
#	apply($\{1:array\}, $\{2:margin\}, $\{3:function\})\
#snippet lapply\
#	lapply($\{1:list\}, $\{2:function\})\
#snippet sapply\
#	lapply($\{1:list\}, $\{2:function\})\
#snippet vapply\
#	vapply($\{1:list\}, $\{2:function\}, $\{3:type\})\
#snippet mapply\
#	mapply($\{1:function\}, $\{2:...\})\
#snippet tapply\
#	tapply($\{1:vector\}, $\{2:index\}, $\{3:function\})\
#snippet rapply\
#	rapply($\{1:list\}, $\{2:function\})\
\
## plyr functions\
#snippet dd\
#	ddply($\{1:frame\}, $\{2:variables\}, $\{3:function\})\
#snippet dl\
#	dlply($\{1:frame\}, $\{2:variables\}, $\{3:function\})\
#snippet da\
#	daply($\{1:frame\}, $\{2:variables\}, $\{3:function\})\
#snippet d_\
#	d_ply($\{1:frame\}, $\{2:variables\}, $\{3:function\})\
#\
#snippet ad\
#	adply($\{1:array\}, $\{2:margin\}, $\{3:function\})\
#snippet al\
#	alply($\{1:array\}, $\{2:margin\}, $\{3:function\})\
#snippet aa\
#	aaply($\{1:array\}, $\{2:margin\}, $\{3:function\})\
#snippet a_\
#	a_ply($\{1:array\}, $\{2:margin\}, $\{3:function\})\
\
#snippet ld\
#	ldply($\{1:list\}, $\{2:function\})\
#snippet ll\
#	llply($\{1:list\}, $\{2:function\})\
#snippet la\
#	laply($\{1:list\}, $\{2:function\})\
#snippet l_\
#	l_ply($\{1:list\}, $\{2:function\})\
#\
#snippet md\
#	mdply($\{1:matrix\}, $\{2:function\})\
#snippet ml\
#	mlply($\{1:matrix\}, $\{2:function\})\
#snippet ma\
#	maply($\{1:matrix\}, $\{2:function\})\
#snippet m_\
#	m_ply($\{1:matrix\}, $\{2:function\})\
\
# plot functions\
#snippet pl\
#	plot($\{1:x\}, $\{2:y\})\
#\
#snippet img\
#	$\{1:(jpeg,bmp,png,tiff)\}(filename="$\{2:filename\}", width=$\{3\}, height=$\{4\}, unit="$\{5\}")\
#	$\{6:plot\}\
#	dev.off()\
\
# statistical test functions\
#snippet fis\
#	fisher.test($\{1:x\}, $\{2:y\})\
#snippet chi\
#	chisq.test($\{1:x\}, $\{2:y\})\
#snippet tt\
#	t.test($\{1:x\}, $\{2:y\})\
#snippet wil\
#	wilcox.test($\{1:x\}, $\{2:y\})\
#snippet cor\
#	cor.test($\{1:x\}, $\{2:y\})\
#snippet fte\
#	var.test($\{1:x\}, $\{2:y\})\
#snippet kvt \
#	kv.test($\{1:x\}, $\{2:y\})}